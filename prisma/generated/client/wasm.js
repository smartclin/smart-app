
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-compiler-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  isAnonymous: 'isAnonymous',
  messageCount: 'messageCount',
  imageCount: 'imageCount',
  lastReset: 'lastReset',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  role: 'role',
  banned: 'banned',
  banReason: 'banReason',
  banExpires: 'banExpires',
  firstName: 'firstName',
  lastName: 'lastName'
};

exports.Prisma.RelationLoadStrategy = {
  query: 'query',
  join: 'join'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  impersonatedBy: 'impersonatedBy'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountId: 'accountId',
  providerId: 'providerId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  idToken: 'idToken',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChatScalarFieldEnum = {
  id: 'id',
  title: 'title',
  archived: 'archived',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  role: 'role',
  content: 'content',
  parts: 'parts',
  imageKey: 'imageKey',
  imageUrl: 'imageUrl',
  userId: 'userId',
  chatId: 'chatId',
  promptId: 'promptId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StreamScalarFieldEnum = {
  id: 'id',
  chatId: 'chatId',
  createdAt: 'createdAt'
};

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  userId: 'userId',
  dateOfBirth: 'dateOfBirth',
  gender: 'gender',
  phone: 'phone',
  email: 'email',
  maritalStatus: 'maritalStatus',
  nutritionalStatus: 'nutritionalStatus',
  address: 'address',
  emergencyContactName: 'emergencyContactName',
  emergencyContactNumber: 'emergencyContactNumber',
  relation: 'relation',
  bloodGroup: 'bloodGroup',
  allergies: 'allergies',
  medicalConditions: 'medicalConditions',
  medicalHistory: 'medicalHistory',
  insuranceProvider: 'insuranceProvider',
  insuranceNumber: 'insuranceNumber',
  privacyConsent: 'privacyConsent',
  serviceConsent: 'serviceConsent',
  medicalConsent: 'medicalConsent',
  img: 'img',
  colorCode: 'colorCode',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DoctorScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  userId: 'userId',
  specialization: 'specialization',
  licenseNumber: 'licenseNumber',
  phone: 'phone',
  address: 'address',
  department: 'department',
  img: 'img',
  colorCode: 'colorCode',
  availabilityStatus: 'availabilityStatus',
  type: 'type',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkingDaysScalarFieldEnum = {
  id: 'id',
  doctorId: 'doctorId',
  day: 'day',
  startTime: 'startTime',
  closeTime: 'closeTime',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StaffScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  phone: 'phone',
  userId: 'userId',
  address: 'address',
  department: 'department',
  img: 'img',
  licenseNumber: 'licenseNumber',
  colorCode: 'colorCode',
  hireDate: 'hireDate',
  salary: 'salary',
  role: 'role',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AppointmentScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  doctorId: 'doctorId',
  serviceId: 'serviceId',
  appointmentDate: 'appointmentDate',
  time: 'time',
  status: 'status',
  type: 'type',
  note: 'note',
  reason: 'reason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  billId: 'billId',
  patientId: 'patientId',
  appointmentId: 'appointmentId',
  billDate: 'billDate',
  paymentDate: 'paymentDate',
  discount: 'discount',
  totalAmount: 'totalAmount',
  amountPaid: 'amountPaid',
  paymentMethod: 'paymentMethod',
  status: 'status',
  receiptNumber: 'receiptNumber',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PatientBillsScalarFieldEnum = {
  id: 'id',
  billId: 'billId',
  serviceId: 'serviceId',
  serviceDate: 'serviceDate',
  quantity: 'quantity',
  unitCost: 'unitCost',
  totalCost: 'totalCost',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LabTestScalarFieldEnum = {
  id: 'id',
  recordId: 'recordId',
  testDate: 'testDate',
  result: 'result',
  status: 'status',
  notes: 'notes',
  serviceId: 'serviceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MedicalRecordsScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  appointmentId: 'appointmentId',
  doctorId: 'doctorId',
  treatmentPlan: 'treatmentPlan',
  prescriptions: 'prescriptions',
  labRequest: 'labRequest',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VitalSignsScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  medicalId: 'medicalId',
  bodyTemperature: 'bodyTemperature',
  systolic: 'systolic',
  diastolic: 'diastolic',
  heartRate: 'heartRate',
  respiratoryRate: 'respiratoryRate',
  oxygenSaturation: 'oxygenSaturation',
  weight: 'weight',
  height: 'height',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DiagnosisScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  medicalId: 'medicalId',
  doctorId: 'doctorId',
  symptoms: 'symptoms',
  diagnosis: 'diagnosis',
  notes: 'notes',
  prescribedMedications: 'prescribedMedications',
  followUpPlan: 'followUpPlan',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  recordId: 'recordId',
  action: 'action',
  details: 'details',
  model: 'model',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RatingScalarFieldEnum = {
  id: 'id',
  staffId: 'staffId',
  patientId: 'patientId',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ServicesScalarFieldEnum = {
  id: 'id',
  serviceName: 'serviceName',
  description: 'description',
  price: 'price',
  category: 'category',
  duration: 'duration',
  isAvailable: 'isAvailable',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PrescriptionScalarFieldEnum = {
  id: 'id',
  medicalRecordId: 'medicalRecordId',
  doctorId: 'doctorId',
  patientId: 'patientId',
  medicationName: 'medicationName',
  dosage: 'dosage',
  frequency: 'frequency',
  duration: 'duration',
  instructions: 'instructions',
  issuedDate: 'issuedDate',
  endDate: 'endDate',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VaccinationScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  administeredBy: 'administeredBy',
  vaccineName: 'vaccineName',
  vaccineBatchNo: 'vaccineBatchNo',
  administrationRoute: 'administrationRoute',
  siteOfInjection: 'siteOfInjection',
  administeredDate: 'administeredDate',
  nextDueDate: 'nextDueDate',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WHOGrowthStandardScalarFieldEnum = {
  id: 'id',
  ageInMonths: 'ageInMonths',
  gender: 'gender',
  measurementType: 'measurementType',
  lValue: 'lValue',
  mValue: 'mValue',
  sValue: 'sValue',
  sd0: 'sd0',
  sd1neg: 'sd1neg',
  sd1pos: 'sd1pos',
  sd2neg: 'sd2neg',
  sd2pos: 'sd2pos',
  sd3neg: 'sd3neg',
  sd3pos: 'sd3pos',
  sd4neg: 'sd4neg',
  sd4pos: 'sd4pos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ChatRole = exports.$Enums.ChatRole = {
  USER: 'USER',
  AI: 'AI'
};

exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  STAFF: 'STAFF',
  DOCTOR: 'DOCTOR',
  PATIENT: 'PATIENT'
};

exports.Status = exports.$Enums.Status = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  DORMANT: 'DORMANT'
};

exports.JOBTYPE = exports.$Enums.JOBTYPE = {
  FULL: 'FULL',
  PART: 'PART'
};

exports.Gender = exports.$Enums.Gender = {
  MALE: 'MALE',
  FEMALE: 'FEMALE'
};

exports.AppointmentStatus = exports.$Enums.AppointmentStatus = {
  PENDING: 'PENDING',
  SCHEDULED: 'SCHEDULED',
  CANCELLED: 'CANCELLED',
  COMPLETED: 'COMPLETED'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CASH: 'CASH',
  CARD: 'CARD',
  MOBILE: 'MOBILE'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PAID: 'PAID',
  UNPAID: 'UNPAID',
  PARTIAL: 'PARTIAL',
  REFUNDED: 'REFUNDED'
};

exports.ServiceCategory = exports.$Enums.ServiceCategory = {
  CONSULTATION: 'CONSULTATION',
  LAB_TEST: 'LAB_TEST',
  VACCINATION: 'VACCINATION',
  PROCEDURE: 'PROCEDURE',
  PHARMACY: 'PHARMACY',
  DIAGNOSIS: 'DIAGNOSIS',
  OTHER: 'OTHER'
};

exports.MeasurementType = exports.$Enums.MeasurementType = {
  WFA: 'WFA',
  HFA: 'HFA',
  HcFA: 'HcFA'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Chat: 'Chat',
  Message: 'Message',
  Stream: 'Stream',
  Patient: 'Patient',
  Doctor: 'Doctor',
  WorkingDays: 'WorkingDays',
  Staff: 'Staff',
  Appointment: 'Appointment',
  Payment: 'Payment',
  PatientBills: 'PatientBills',
  LabTest: 'LabTest',
  MedicalRecords: 'MedicalRecords',
  VitalSigns: 'VitalSigns',
  Diagnosis: 'Diagnosis',
  AuditLog: 'AuditLog',
  Rating: 'Rating',
  Services: 'Services',
  Prescription: 'Prescription',
  Vaccination: 'Vaccination',
  WHOGrowthStandard: 'WHOGrowthStandard'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/workspaces/smart-app/prisma/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "generatedFileExtension": "ts",
      "importFileExtension": "ts",
      "runtime": "nodejs",
      "moduleFormat": "esm",
      "engineType": "client"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters",
      "queryCompiler",
      "relationJoins",
      "views"
    ],
    "sourceFilePath": "/workspaces/smart-app/prisma/schema/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../schema",
  "clientVersion": "6.13.0",
  "engineVersion": "361e86d0ea4987e9f53a565309b3eed797a6bcbd",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "model User {\n  id            String    @id @default(uuid())\n  name          String?\n  email         String?   @unique\n  emailVerified Boolean   @default(false)\n  image         String?\n  isAnonymous   Boolean?  @default(false)\n  messageCount  Int       @default(0)\n  imageCount    Int       @default(0)\n  lastReset     DateTime?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n  accounts      Account[]\n  chats         Chat[]\n  messages      Message[]\n  sessions      Session[]\n  role          String?\n  banned        Boolean?\n  banReason     String?\n  banExpires    DateTime?\n  firstName     String?\n  lastName      String?\n  Patient       Patient[]\n  Doctor        Doctor[]\n  Staff         Staff[]\n\n  @@map(\"user\")\n}\n\nmodel Session {\n  id             String   @id @default(uuid())\n  userId         String\n  token          String   @unique\n  expiresAt      DateTime\n  ipAddress      String?\n  userAgent      String?\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  impersonatedBy String?\n\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id @default(uuid())\n  userId                String\n  accountId             String\n  providerId            String\n  accessToken           String?\n  refreshToken          String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  idToken               String?\n  password              String?\n  createdAt             DateTime  @default(now())\n  updatedAt             DateTime  @updatedAt\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([providerId, accountId])\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String   @id @default(uuid())\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  @@map(\"verification\")\n}\n\nmodel Chat {\n  id        String    @id @default(uuid())\n  title     String    @default(\"New Chat\")\n  archived  Boolean   @default(false)\n  userId    String\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  messages  Message[]\n  streams   Stream[]\n}\n\nmodel Message {\n  id        String   @id @default(uuid())\n  role      ChatRole\n  content   String?\n  parts     Json\n  imageKey  String?\n  imageUrl  String?\n  userId    String\n  chatId    String\n  promptId  String?  @unique\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)\n  prompt    Message? @relation(\"ResponseMessage\", fields: [promptId], references: [id])\n  response  Message? @relation(\"ResponseMessage\")\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Stream {\n  id        String   @id @default(uuid())\n  chatId    String\n  createdAt DateTime @default(now())\n  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)\n}\n\nenum ChatRole {\n  USER\n  AI\n}\n\nenum Role {\n  ADMIN\n  STAFF\n  DOCTOR\n  PATIENT\n}\n\nenum Status {\n  ACTIVE\n  INACTIVE\n  DORMANT\n}\n\nenum JOBTYPE {\n  FULL\n  PART\n}\n\nenum Gender {\n  MALE\n  FEMALE\n}\n\nenum AppointmentStatus {\n  PENDING\n  SCHEDULED\n  CANCELLED\n  COMPLETED\n}\n\nenum PaymentMethod {\n  CASH\n  CARD\n  MOBILE\n}\n\nenum PaymentStatus {\n  PAID\n  UNPAID\n  PARTIAL\n  REFUNDED\n}\n\nmodel Patient {\n  id                     String           @id //clerk userId\n  firstName              String\n  lastName               String\n  userId                 String           @unique\n  user                   User             @relation(fields: [userId], references: [id], onDelete: Cascade)\n  dateOfBirth            DateTime\n  gender                 Gender           @default(MALE)\n  phone                  String?\n  email                  String           @unique\n  maritalStatus          String?\n  nutritionalStatus      String?\n  address                String?\n  emergencyContactName   String?\n  emergencyContactNumber String?\n  relation               String?\n  bloodGroup             String?\n  allergies              String?\n  medicalConditions      String?\n  medicalHistory         String?\n  insuranceProvider      String?\n  insuranceNumber        String?\n  privacyConsent         Boolean?\n  serviceConsent         Boolean?\n  medicalConsent         Boolean?\n  img                    String?\n  colorCode              String?\n  role                   Role?\n  appointments           Appointment[]\n  medical                MedicalRecords[]\n  payments               Payment[]\n  ratings                Rating[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  Prescription Prescription[]\n\n  Vaccination Vaccination[]\n}\n\nmodel Doctor {\n  id     String @id\n  email  String @unique\n  name   String\n  userId String @unique\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  specialization     String\n  licenseNumber      String?\n  phone              String?\n  address            String?\n  department         String?\n  img                String?\n  colorCode          String?\n  availabilityStatus String?\n\n  type         JOBTYPE       @default(FULL)\n  workingDays  WorkingDays[]\n  appointments Appointment[]\n  ratings      Rating[]\n  diagnosis    Diagnosis[]\n  role         Role?\n  createdAt    DateTime      @default(now())\n  updatedAt    DateTime      @updatedAt\n\n  Prescription Prescription[]\n}\n\nmodel WorkingDays {\n  id        Int    @id @default(autoincrement())\n  doctorId  String\n  day       String\n  startTime String\n  closeTime String\n\n  doctor Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Staff {\n  id     String @id\n  email  String @unique\n  name   String\n  phone  String\n  userId String @unique\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  address       String\n  department    String?\n  img           String?\n  licenseNumber String?\n  colorCode     String?\n  hireDate      DateTime? @default(now()) @db.Date // When they were hired\n  salary        Float? // Optional, for internal use\n\n  role   Role\n  status Status @default(ACTIVE)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  Vaccination Vaccination[] @relation(\"AdministeredByStaff\")\n}\n\nmodel Appointment {\n  id        Int    @id @default(autoincrement())\n  patientId String\n  doctorId  String\n  serviceId Int?\n\n  appointmentDate DateTime\n  time            String\n  status          AppointmentStatus? @default(PENDING)\n  type            String\n  note            String?\n  patient         Patient            @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  doctor          Doctor             @relation(fields: [doctorId], references: [id], onDelete: Cascade)\n  service         Services?          @relation(fields: [serviceId], references: [id])\n  bills           Payment[]\n  medical         MedicalRecords[]\n\n  reason    String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Payment {\n  id            Int      @id @default(autoincrement())\n  billId        Int?\n  patientId     String\n  appointmentId Int      @unique\n  billDate      DateTime\n  paymentDate   DateTime\n  discount      Float\n  totalAmount   Float\n  amountPaid    Float\n\n  paymentMethod PaymentMethod @default(CASH)\n  status        PaymentStatus @default(UNPAID)\n  receiptNumber Int           @default(autoincrement())\n\n  appointment Appointment    @relation(fields: [appointmentId], references: [id], onDelete: Cascade)\n  patient     Patient        @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  bills       PatientBills[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel PatientBills {\n  id          Int      @id @default(autoincrement())\n  billId      Int\n  serviceId   Int\n  serviceDate DateTime\n  quantity    Int\n  unitCost    Float\n  totalCost   Float\n  service     Services @relation(fields: [serviceId], references: [id])\n  payment     Payment  @relation(fields: [billId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel LabTest {\n  id        Int       @id @default(autoincrement())\n  recordId  Int\n  testDate  DateTime\n  result    String\n  status    String\n  notes     String?\n  serviceId Int?\n  services  Services? @relation(fields: [serviceId], references: [id])\n\n  medicalRecord MedicalRecords @relation(fields: [recordId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel MedicalRecords {\n  id            Int     @id @default(autoincrement())\n  patientId     String\n  appointmentId Int\n  doctorId      String\n  treatmentPlan String?\n  prescriptions String?\n  labRequest    String?\n\n  appointment Appointment @relation(fields: [appointmentId], references: [id], onDelete: Cascade)\n  patient     Patient     @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  labTest     LabTest[]\n  notes       String?\n\n  vitalSigns VitalSigns[]\n  diagnosis  Diagnosis[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  Prescription Prescription[]\n}\n\nmodel VitalSigns {\n  id               Int            @id @default(autoincrement())\n  patientId        String\n  medicalId        Int\n  medical          MedicalRecords @relation(fields: [medicalId], references: [id], onDelete: Cascade)\n  bodyTemperature  Float?\n  systolic         Int?\n  diastolic        Int?\n  heartRate        String?\n  respiratoryRate  Int?\n  oxygenSaturation Int?\n  weight           Float\n  height           Float?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Diagnosis {\n  id                    Int     @id @default(autoincrement())\n  patientId             String\n  medicalId             Int\n  doctorId              String\n  doctor                Doctor  @relation(fields: [doctorId], references: [id])\n  symptoms              String\n  diagnosis             String\n  notes                 String?\n  prescribedMedications String?\n  followUpPlan          String?\n\n  medical MedicalRecords @relation(fields: [medicalId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel AuditLog {\n  id       Int     @id @default(autoincrement())\n  userId   String\n  recordId String\n  action   String\n  details  String?\n  model    String\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Rating {\n  id        Int     @id @default(autoincrement())\n  staffId   String\n  patientId String\n  rating    Int\n  comment   String?\n\n  doctor  Doctor  @relation(fields: [staffId], references: [id], onDelete: Cascade)\n  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Services {\n  id          Int              @id @default(autoincrement())\n  serviceName String\n  description String\n  price       Float\n  labtests    LabTest[]\n  bills       PatientBills[]\n  category    ServiceCategory? // Optional categorization\n  duration    Int? // Duration in minutes\n  isAvailable Boolean          @default(true) // Whether the service is currently offered\n\n  appointments Appointment[] // A service can be part of many appointments\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nenum ServiceCategory {\n  CONSULTATION\n  LAB_TEST\n  VACCINATION\n  PROCEDURE\n  PHARMACY\n  DIAGNOSIS\n  OTHER\n}\n\nmodel Prescription {\n  id              Int     @id @default(autoincrement())\n  medicalRecordId Int     @map(\"medical_record_id\")\n  doctorId        String? // Doctor who issued the prescription (optional if already linked via medicalRecord.doctor)\n  patientId       String // Patient the prescription is for (redundant if linked via medicalRecord.patient, but ensures direct access)\n\n  medicationName String    @map(\"medication_name\")\n  dosage         String    @map(\"dosage\") // e.g., \"250mg\", \"1 tablet\"\n  frequency      String    @map(\"frequency\") // e.g., \"Once a day\", \"Every 4 hours\"\n  duration       String    @map(\"duration\") // e.g., \"7 days\", \"Until finished\"\n  instructions   String?   @map(\"instructions\") @db.Text // Special instructions\n  issuedDate     DateTime  @default(now()) @map(\"issued_date\") @db.Timestamp(3)\n  endDate        DateTime? @map(\"end_date\") @db.Timestamp(3) // When the prescription is valid until\n  status         String    @default(\"active\") // e.g., \"active\", \"completed\", \"cancelled\" - consider an enum\n\n  // Relations\n  medicalRecord MedicalRecords @relation(fields: [medicalRecordId], references: [id], onDelete: Cascade)\n  doctor        Doctor?        @relation(fields: [doctorId], references: [id])\n  patient       Patient        @relation(fields: [patientId], references: [id])\n\n  createdAt DateTime @default(now()) @db.Timestamp(3)\n  updatedAt DateTime @updatedAt @db.Timestamp(3)\n\n  @@map(\"prescriptions\")\n}\n\nmodel Vaccination {\n  id                  Int       @id @default(autoincrement())\n  patientId           String\n  administeredBy      String? // Staff member who administered the vaccine (e.g., Nurse)\n  vaccineName         String    @map(\"vaccine_name\") // e.g., \"MMR\", \"DTP\"\n  vaccineBatchNo      String?   @map(\"vaccine_batch_no\") // Batch number of the vaccine\n  administrationRoute String?   @map(\"administration_route\") // e.g., \"Intramuscular\"\n  siteOfInjection     String?   @map(\"site_of_injection\") // e.g., \"Left deltoid\"\n  administeredDate    DateTime  @map(\"administered_date\") @db.Timestamp(3)\n  nextDueDate         DateTime? @map(\"next_due_date\") @db.Timestamp(3) // For multi-dose vaccines\n  notes               String?   @db.Text\n\n  // Relations\n  patient             Patient @relation(fields: [patientId], references: [id])\n  administeredByStaff Staff?  @relation(\"AdministeredByStaff\", fields: [administeredBy], references: [id])\n\n  createdAt DateTime @default(now()) @db.Timestamp(3)\n  updatedAt DateTime @updatedAt @db.Timestamp(3)\n\n  @@map(\"vaccinations\")\n}\n\nmodel WHOGrowthStandard {\n  id              Int             @id @default(autoincrement())\n  ageInMonths     Int             @map(\"age_in_months\") // Renamed from ageDays for clarity, common in WHO standards\n  gender          Gender\n  measurementType MeasurementType @map(\"measurement_type\") // e.g., Weight-for-age, Height-for-age\n  lValue          Float           @map(\"l_value\") @db.DoublePrecision\n  mValue          Float           @map(\"m_value\") @db.DoublePrecision\n  sValue          Float           @map(\"s_value\") @db.DoublePrecision\n  sd0             Float           @map(\"sd0\") @db.DoublePrecision\n  sd1neg          Float           @map(\"sd1neg\") @db.DoublePrecision\n  sd1pos          Float           @map(\"sd1pos\") @db.DoublePrecision\n  sd2neg          Float           @map(\"sd2neg\") @db.DoublePrecision\n  sd2pos          Float           @map(\"sd2pos\") @db.DoublePrecision\n  sd3neg          Float           @map(\"sd3neg\") @db.DoublePrecision\n  sd3pos          Float           @map(\"sd3pos\") @db.DoublePrecision\n  sd4neg          Float?          @map(\"sd4neg\") @db.DoublePrecision\n  sd4pos          Float?          @map(\"sd4pos\") @db.DoublePrecision\n\n  createdAt DateTime @default(now()) @db.Timestamp(3)\n  updatedAt DateTime @updatedAt @db.Timestamp(3)\n\n  @@map(\"who_growth_standards\")\n}\n\nenum MeasurementType {\n  WFA\n  HFA\n  HcFA\n}\n\ngenerator client {\n  provider               = \"prisma-client-js\"\n  output                 = \"../generated/client\"\n  previewFeatures        = [\"views\", \"driverAdapters\", \"relationJoins\", \"queryCompiler\"]\n  generatedFileExtension = \"ts\"\n  importFileExtension    = \"ts\"\n  moduleFormat           = \"esm\"\n  runtime                = \"nodejs\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// generator zod {\n//   provider = \"zod-prisma-types\"\n//   output   = \"../../src/lib/schema\"\n\n//   useMultipleFiles                 = true //   # Better modularity\n//   writeBarrelFiles                 = true //   # Easier imports\n//   createInputTypes                 = true //   # Needed for tRPC/Mutations\n//   createModelTypes                 = true //   # Needed for inference/UI\n//   createOptionalDefaultValuesTypes = true //   # Great for forms/edit pages\n//   createRelationValuesTypes        = true //   # Needed for nested DTOs\n//   createPartialTypes               = true //   # Enables `.partial()` (useful in PATCH routes)\n//   //\n//   addInputTypeValidation           = true //   # Strong runtime validation\n//   validateWhereUniqueInput         = true //   # Enforces proper `where` clause structure\n//   useDefaultValidators             = true //   # Adds string/email/date/etc. basic Zod validation\n//   coerceDate                       = true //   # Converts strings to dates automatically\n//   //\n//   writeNullishInModelTypes         = false //   # ❌ Disable to make types cleaner (use `null` instead of `string | null | undefined`)\n//   addIncludeType                   = false //   # Avoid clutter unless you use `.include()` in queries\n//   addSelectType                    = false //   # Same: skip unless you use `.select()`\n// }\n",
  "inlineSchemaHash": "79cfaa619da73913d0d608437e43d853da081baf5e7aa184fc0cfe632a43767e",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAnonymous\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"messageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"imageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastReset\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"chats\",\"kind\":\"object\",\"type\":\"Chat\",\"relationName\":\"ChatToUser\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToUser\"},{\"name\":\"Doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToUser\"},{\"name\":\"Staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"StaffToUser\"}],\"dbName\":\"user\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"impersonatedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"Chat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ChatToUser\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ChatToMessage\"},{\"name\":\"streams\",\"kind\":\"object\",\"type\":\"Stream\",\"relationName\":\"ChatToStream\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"ChatRole\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"imageKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promptId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat\",\"kind\":\"object\",\"type\":\"Chat\",\"relationName\":\"ChatToMessage\"},{\"name\":\"prompt\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ResponseMessage\"},{\"name\":\"response\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ResponseMessage\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageToUser\"}],\"dbName\":null},\"Stream\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat\",\"kind\":\"object\",\"type\":\"Chat\",\"relationName\":\"ChatToStream\"}],\"dbName\":null},\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PatientToUser\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maritalStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nutritionalStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emergencyContactNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bloodGroup\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allergies\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicalConditions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicalHistory\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"insuranceProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"insuranceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"privacyConsent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"serviceConsent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"medicalConsent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"img\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"colorCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToPatient\"},{\"name\":\"medical\",\"kind\":\"object\",\"type\":\"MedicalRecords\",\"relationName\":\"MedicalRecordsToPatient\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PatientToPayment\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"PatientToRating\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Prescription\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"PatientToPrescription\"},{\"name\":\"Vaccination\",\"kind\":\"object\",\"type\":\"Vaccination\",\"relationName\":\"PatientToVaccination\"}],\"dbName\":null},\"Doctor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DoctorToUser\"},{\"name\":\"specialization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"licenseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"img\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"colorCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"availabilityStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"JOBTYPE\"},{\"name\":\"workingDays\",\"kind\":\"object\",\"type\":\"WorkingDays\",\"relationName\":\"DoctorToWorkingDays\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToDoctor\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Rating\",\"relationName\":\"DoctorToRating\"},{\"name\":\"diagnosis\",\"kind\":\"object\",\"type\":\"Diagnosis\",\"relationName\":\"DiagnosisToDoctor\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Prescription\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"DoctorToPrescription\"}],\"dbName\":null},\"WorkingDays\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"day\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"closeTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToWorkingDays\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Staff\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StaffToUser\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"img\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"licenseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"colorCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hireDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Vaccination\",\"kind\":\"object\",\"type\":\"Vaccination\",\"relationName\":\"AdministeredByStaff\"}],\"dbName\":null},\"Appointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"appointmentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AppointmentStatus\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"AppointmentToPatient\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"AppointmentToDoctor\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"AppointmentToServices\"},{\"name\":\"bills\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"AppointmentToPayment\"},{\"name\":\"medical\",\"kind\":\"object\",\"type\":\"MedicalRecords\",\"relationName\":\"AppointmentToMedicalRecords\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"billId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"billDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"amountPaid\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"receiptNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToPayment\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToPayment\"},{\"name\":\"bills\",\"kind\":\"object\",\"type\":\"PatientBills\",\"relationName\":\"PatientBillsToPayment\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PatientBills\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"billId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"PatientBillsToServices\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PatientBillsToPayment\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"LabTest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recordId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"testDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Services\",\"relationName\":\"LabTestToServices\"},{\"name\":\"medicalRecord\",\"kind\":\"object\",\"type\":\"MedicalRecords\",\"relationName\":\"LabTestToMedicalRecords\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"MedicalRecords\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"treatmentPlan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prescriptions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"labRequest\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToMedicalRecords\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"MedicalRecordsToPatient\"},{\"name\":\"labTest\",\"kind\":\"object\",\"type\":\"LabTest\",\"relationName\":\"LabTestToMedicalRecords\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vitalSigns\",\"kind\":\"object\",\"type\":\"VitalSigns\",\"relationName\":\"MedicalRecordsToVitalSigns\"},{\"name\":\"diagnosis\",\"kind\":\"object\",\"type\":\"Diagnosis\",\"relationName\":\"DiagnosisToMedicalRecords\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Prescription\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"MedicalRecordsToPrescription\"}],\"dbName\":null},\"VitalSigns\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicalId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"medical\",\"kind\":\"object\",\"type\":\"MedicalRecords\",\"relationName\":\"MedicalRecordsToVitalSigns\"},{\"name\":\"bodyTemperature\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"systolic\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"diastolic\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"heartRate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"respiratoryRate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"oxygenSaturation\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Diagnosis\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicalId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DiagnosisToDoctor\"},{\"name\":\"symptoms\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"diagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prescribedMedications\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"followUpPlan\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medical\",\"kind\":\"object\",\"type\":\"MedicalRecords\",\"relationName\":\"DiagnosisToMedicalRecords\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recordId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Rating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToRating\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToRating\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Services\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"labtests\",\"kind\":\"object\",\"type\":\"LabTest\",\"relationName\":\"LabTestToServices\"},{\"name\":\"bills\",\"kind\":\"object\",\"type\":\"PatientBills\",\"relationName\":\"PatientBillsToServices\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"ServiceCategory\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"appointments\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToServices\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Prescription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"medicalRecordId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"medical_record_id\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicationName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"medication_name\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"dosage\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"frequency\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"duration\"},{\"name\":\"instructions\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"instructions\"},{\"name\":\"issuedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"issued_date\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"end_date\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"medicalRecord\",\"kind\":\"object\",\"type\":\"MedicalRecords\",\"relationName\":\"MedicalRecordsToPrescription\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"Doctor\",\"relationName\":\"DoctorToPrescription\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToPrescription\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"prescriptions\"},\"Vaccination\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"administeredBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vaccineName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"vaccine_name\"},{\"name\":\"vaccineBatchNo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"vaccine_batch_no\"},{\"name\":\"administrationRoute\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"administration_route\"},{\"name\":\"siteOfInjection\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"site_of_injection\"},{\"name\":\"administeredDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"administered_date\"},{\"name\":\"nextDueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"next_due_date\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToVaccination\"},{\"name\":\"administeredByStaff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"AdministeredByStaff\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"vaccinations\"},\"WHOGrowthStandard\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ageInMonths\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"age_in_months\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"measurementType\",\"kind\":\"enum\",\"type\":\"MeasurementType\",\"dbName\":\"measurement_type\"},{\"name\":\"lValue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"l_value\"},{\"name\":\"mValue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"m_value\"},{\"name\":\"sValue\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"s_value\"},{\"name\":\"sd0\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"sd0\"},{\"name\":\"sd1neg\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"sd1neg\"},{\"name\":\"sd1pos\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"sd1pos\"},{\"name\":\"sd2neg\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"sd2neg\"},{\"name\":\"sd2pos\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"sd2pos\"},{\"name\":\"sd3neg\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"sd3neg\"},{\"name\":\"sd3pos\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"sd3pos\"},{\"name\":\"sd4neg\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"sd4neg\"},{\"name\":\"sd4pos\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"sd4pos\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"who_growth_standards\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

